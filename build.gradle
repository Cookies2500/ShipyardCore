plugins {
    id 'java'
    id("io.papermc.paperweight.userdev") version "1.7.7"
}

group = 'cookies250'
version = project.plugin_version

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = "EngineHub"
        url = "https://maven.enginehub.org/repo/"
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT'
    compileOnly 'com.sk89q.worldedit:worldedit-core:7.3.13'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.3.13'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.3.0'
    paperweight.paperDevBundle("1.21-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    destinationDirectory.set(file("Server\\plugins"))
}

tasks.assemble {
    dependsOn(tasks.reobfJar)
}